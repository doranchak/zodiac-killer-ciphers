package com.zodiackillerciphers.cosine;

import java.util.ArrayList;

import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;

import com.zodiackillerciphers.ciphers.Ciphers;
import com.zodiackillerciphers.ciphers.generator.LogProcessor;
import com.zodiackillerciphers.io.FileUtil;
import com.zodiackillerciphers.transform.CipherTransformations;

public class CosineSimilarity {
	public ContactVector contactvector;
	public Map<Character, Float> best; // track best cosine similarity per distinct symbol
	public float score;
	public float min = Float.MAX_VALUE;
	public float max = -Float.MAX_VALUE;
	public float mean = 0;
	
	// shuffled z340's CS means
	public static double[] z340ShuffleMeans = new double[] { 0.5400043024,
			0.4954240093, 0.4726051967, 0.4563006073, 0.4438878982,
			0.4339714659, 0.4256220949, 0.4186169285, 0.4125322853,
			0.4070933912, 0.4020447838, 0.3974137586, 0.3931486732,
			0.3890103148, 0.3850992079, 0.3812814348, 0.377811729,
			0.3744048709, 0.3713041116, 0.3684169679, 0.3656637759,
			0.3630377489, 0.360571879, 0.3582226656, 0.3560604349,
			0.3539625811, 0.3519453693, 0.3500188451, 0.3481368884,
			0.3463184004, 0.3445072354, 0.3427558699, 0.341036927,
			0.3393286687, 0.3376840787, 0.3360330543, 0.3344561099,
			0.332865324, 0.3313228003, 0.3297870029, 0.3282555726,
			0.3267912648, 0.3253803705, 0.3239565439, 0.3225099281,
			0.3211321115, 0.3197937632, 0.3184753763, 0.3171359711,
			0.3158665789, 0.3146267457, 0.3134349933, 0.3122770513,
			0.3110943776, 0.3099849156, 0.3088771998, 0.30779701, 0.306684721,
			0.3056174713, 0.3045141411, 0.3034677106, 0.3023928518,
			0.3013254665, 0.3002624731, 0.2992399649, 0.2982392312,
			0.2972899163, 0.2963525343, 0.2954499024, 0.2945658856,
			0.2937161393, 0.2928858125, 0.2920862572, 0.2913061166,
			0.2905834486, 0.2899042839, 0.2892225343, 0.2885162679,
			0.2878266814, 0.287165773, 0.2865119563, 0.2858578894,
			0.2851893972, 0.2845342557, 0.2838597455, 0.2831479588,
			0.2824374593, 0.2817258264, 0.2809739889, 0.2802323915,
			0.2794685277, 0.2786945516, 0.2779314645, 0.2771562934,
			0.2763940223, 0.2756234822, 0.2748637417, 0.2740742658,
			0.2733122781, 0.2725374797, 0.2717811416, 0.2710382246,
			0.2703294054, 0.2695990308, 0.2689061095, 0.2682059814,
			0.2674995495, 0.2668162997, 0.2661465847, 0.2654675512,
			0.2647807741, 0.2641048009, 0.2634339633, 0.262807093,
			0.2621688226, 0.2615454973, 0.2609462181, 0.260343624,
			0.2597567383, 0.2591781043, 0.2586071072, 0.2580610302,
			0.257532945, 0.2570115385, 0.2564877379, 0.2559912345,
			0.2555138063, 0.2550435896, 0.2545910454, 0.2541513226,
			0.2536987462, 0.2532705113, 0.2528686649, 0.2524636731,
			0.252071563, 0.251677763, 0.2512789646, 0.250900217, 0.2504877001,
			0.2500978627, 0.2496891323, 0.2492733223, 0.2488530922,
			0.2484278495, 0.2479831538, 0.2475455259, 0.2470990753,
			0.2466358217, 0.2461825478, 0.2457063862, 0.2452234057,
			0.2447276843, 0.2442298186, 0.2437432964, 0.2432258774,
			0.2427090762, 0.2422101543, 0.2417042309, 0.2411780123,
			0.2406539313, 0.2401464367, 0.2396177128, 0.23910402, 0.2385946941,
			0.2380861233, 0.2375755901, 0.2370731746, 0.236603688,
			0.2361344834, 0.2356472337, 0.2351761463, 0.2347151858,
			0.2342693088, 0.2337891456, 0.233309376, 0.2328508729,
			0.2324164568, 0.2319690559, 0.2315345183, 0.2311043828,
			0.2306713762, 0.2302360299, 0.229806624, 0.229377393, 0.2289651134,
			0.2285451053, 0.2281248466, 0.2277141408, 0.2273021562,
			0.2269085257, 0.2265050293, 0.2261149014, 0.2257486695,
			0.2253815326, 0.2250115069, 0.2246261476, 0.2242456518,
			0.2238722574, 0.2235173797, 0.223164909, 0.2228089913,
			0.2224588219, 0.2221136856, 0.2217548239, 0.2213901376,
			0.221031154, 0.2206898807, 0.2203281376, 0.2199748857,
			0.2196257106, 0.2192645666, 0.2189054266, 0.2185348047,
			0.2181608423, 0.2177873469, 0.2174062917, 0.2170135494,
			0.2166284935, 0.21623971, 0.2158454734, 0.2154409424, 0.2150358596,
			0.2146325171, 0.2142340951, 0.213839702, 0.213438136, 0.2130416556,
			0.2126473091, 0.2122483884, 0.211851374, 0.2114587541,
			0.2110595553, 0.2106697108, 0.2102885894, 0.2099263708,
			0.2095591255, 0.2092035859, 0.2088452577, 0.2085079321,
			0.208185034, 0.2078626972, 0.2075582099, 0.2072699208,
			0.2069693268, 0.2066902436, 0.2064103816, 0.2061431508,
			0.2058917396, 0.205648823, 0.2054053775, 0.2051852211,
			0.2049719865, 0.2047604535, 0.2045541306, 0.2043570229,
			0.2041676496, 0.2039804168, 0.2038004208, 0.2036102193,
			0.2034240927, 0.203242051, 0.2030637511, 0.2028814173,
			0.2026946096, 0.2024983431, 0.2023026944, 0.2021025649,
			0.2018951661, 0.2016905506, 0.2014729136, 0.2012446227,
			0.2010003753, 0.2007601899, 0.2005039032, 0.2002412437,
			0.1999749704, 0.1997079353, 0.1994301089, 0.1991465997,
			0.1988476308, 0.1985626081, 0.198265426, 0.1979602955,
			0.1976522746, 0.1973297617, 0.1969835063, 0.1966452278,
			0.1963138139, 0.1959709252, 0.1956184211, 0.1952789551,
			0.1949410912, 0.1945950343, 0.1942438678, 0.1938792101,
			0.1935159944, 0.1931776134, 0.192828843, 0.1924856986,
			0.1921306707, 0.1917849266, 0.1914323363, 0.1910947532,
			0.1907609735, 0.1904220772, 0.1900897652, 0.1897749903,
			0.1894584545, 0.1891412749, 0.1888277401, 0.1885031826,
			0.1881727356, 0.1878578419, 0.187561226, 0.1872506425,
			0.1869326285, 0.1866401042, 0.1863525689, 0.1860627441,
			0.1857712604, 0.1854885505, 0.1852115085, 0.184936226,
			0.1846630085, 0.1843869724, 0.1841272896, 0.1838675898,
			0.1835997692, 0.1833425188, 0.1830866758, 0.1828340644,
			0.1825839845, 0.1823409726, 0.1821053709, 0.1818600115,
			0.1816182626, 0.1813876108, 0.1811632564, 0.180931354,
			0.1807091277, 0.1804833906, 0.1802499688, 0.1800265941,
			0.1798049361, 0.1795747588, 0.1793508547, 0.1791331153,
			0.1789106172, 0.1786859388, 0.1784699626, 0.1782631454,
			0.1780571739, 0.1778335265, 0.1776236713, 0.177414814,
			0.1772054269, 0.1770033622, 0.1767996871, 0.1765998987,
			0.1763939881, 0.1761829515, 0.1759773021, 0.1757760533,
			0.1755610354, 0.1753496662, 0.1751414971, 0.1749284253,
			0.174715698, 0.1745036315, 0.1742845803, 0.1740685181, 0.17385217,
			0.1736360188, 0.1734219954, 0.1732111278, 0.1729934348,
			0.1727634362, 0.1725253407, 0.1723151317, 0.1720889507,
			0.1718676757, 0.1716334697, 0.1713902412, 0.1711636229,
			0.170936438, 0.1707092006, 0.1704791589, 0.1702524809,
			0.1700236039, 0.1697927081, 0.1695664605, 0.1693421828,
			0.1691073911, 0.1688821796, 0.1686637716, 0.1684327422,
			0.168208488, 0.1679862193, 0.1677560136, 0.1675153044, 0.167293757,
			0.1670665133, 0.1668387054, 0.1666230515, 0.166398194,
			0.1661802351, 0.1659696201, 0.1657563446, 0.1655277057,
			0.1653064586, 0.1650866514, 0.1648654916, 0.1646490436,
			0.1644297567, 0.164214302, 0.1640121804, 0.163786182, 0.1635529733,
			0.1633243336, 0.1630970443, 0.1628782649, 0.1626467345,
			0.1624121078, 0.1621880647, 0.1619605872, 0.161737706,
			0.1615275651, 0.1613086547, 0.1610880209, 0.1608650774,
			0.1606467862, 0.1604173352, 0.1602149453, 0.1600171976,
			0.1598036464, 0.1595859226, 0.1593822279, 0.1591753844,
			0.1589753222, 0.158757294, 0.1585423728, 0.1583342451,
			0.1581296758, 0.1579187507, 0.1577175018, 0.1575154077,
			0.1573088187, 0.1571077028, 0.1569066921, 0.1566986357,
			0.1564998731, 0.1562920195, 0.1560886111, 0.1558800025,
			0.1556736762, 0.1554623053, 0.1552660862, 0.1550503785,
			0.1548386807, 0.1546292597, 0.1544135351, 0.1542029472,
			0.1539759097, 0.153763748, 0.1535585197, 0.1533431381, 0.15313022,
			0.1529134423, 0.1526876859, 0.1524848137, 0.1522702753,
			0.1520506094, 0.1518416445, 0.1516385018, 0.1514229066,
			0.151208926, 0.1509950995, 0.1507842385, 0.1505717836,
			0.1503607295, 0.1501499678, 0.1499320884, 0.1497265279,
			0.149515097, 0.1493086057, 0.1490981933, 0.1488908487,
			0.1486934196, 0.1484882256, 0.148283724, 0.148087417, 0.1479091901,
			0.1477173809, 0.1475332848, 0.1473460311, 0.1471682937,
			0.146983695, 0.1468129096, 0.1466396715, 0.146468173, 0.1462927198,
			0.146123151, 0.1459597043, 0.1458117726, 0.1456599277,
			0.1455012376, 0.1453444811, 0.1451996995, 0.1450504659,
			0.1449017666, 0.1447657822, 0.1446250934, 0.1444818931,
			0.1443380207, 0.1442009295, 0.1440673848, 0.1439209886,
			0.1437809241, 0.1436361275, 0.1434881466, 0.1433424293,
			0.1432047461, 0.1430761237, 0.142938574, 0.142795502, 0.1426566711,
			0.1425173018, 0.142374982, 0.1422375877, 0.14208854, 0.1419410688,
			0.1417891316, 0.1416299344, 0.1414744021, 0.1413168041,
			0.1411550779, 0.1409964376, 0.1408336609, 0.1406648127,
			0.1404965131, 0.1403270877, 0.1401619644, 0.1399822896,
			0.1398009567, 0.1396185845, 0.1394375021, 0.1392603367,
			0.1390695816, 0.1388824634, 0.138693897, 0.1385010103,
			0.1383104892, 0.138126259, 0.1379215124, 0.1377317126, 0.137538014,
			0.1373424932, 0.1371467486, 0.1369498955, 0.1367608784,
			0.1365601118, 0.136375787, 0.1361746293, 0.1359749018,
			0.1357724867, 0.1355737145, 0.1353689697, 0.1351679994,
			0.1349649192, 0.1347717338, 0.1345733231, 0.1343822344,
			0.1341913549, 0.1339915384, 0.1337936163, 0.1335948056,
			0.1334028067, 0.1332108166, 0.1330165782, 0.1328352273,
			0.1326518409, 0.1324674634, 0.1322867573, 0.1321225038,
			0.1319460657, 0.1317829087, 0.1316030211, 0.1314347605,
			0.1312668478, 0.1311023415, 0.1309358884, 0.1307652732,
			0.130598224, 0.1304232762, 0.1302639028, 0.1300964907,
			0.1299287165, 0.1297679457, 0.1295959387, 0.1294483111,
			0.1292982991, 0.1291380666, 0.1289747216, 0.1288129066,
			0.1286582631, 0.1285017696, 0.1283532697, 0.1282075044,
			0.1280589672, 0.1278992, 0.1277347931, 0.127582874, 0.1274329654,
			0.1272794058, 0.1271309103, 0.126988879, 0.1268401028,
			0.1267009931, 0.1265522332, 0.1264010349, 0.1262581735,
			0.1261002838, 0.1259455902, 0.1258004552, 0.1256481247,
			0.1255036422, 0.1253504798, 0.1252054696, 0.1250593789,
			0.124902609, 0.1247422655, 0.1245844062, 0.1244221834,
			0.1242666817, 0.1241148473, 0.1239563461, 0.1237946671,
			0.1236254266, 0.12346136, 0.1233023447, 0.1231423427, 0.1229834904,
			0.122820889, 0.1226635742, 0.1225096858, 0.1223517255,
			0.1222010561, 0.1220355683, 0.1218731426, 0.1217111606,
			0.1215611575, 0.1213991054, 0.1212402351, 0.1210745619,
			0.1209147519, 0.1207567472, 0.1205969535, 0.1204383205,
			0.1202844894, 0.1201217542, 0.119961823, 0.119799682, 0.1196345559,
			0.1194701612, 0.1193116438, 0.1191539407, 0.1189913396,
			0.1188295788, 0.118665383, 0.1185015803, 0.1183441301,
			0.1181888627, 0.1180366662, 0.1178771699, 0.1177230511,
			0.1175633978, 0.1173995527, 0.1172295932, 0.1170711891,
			0.1169256555, 0.1167797732, 0.1166249042, 0.1164751989,
			0.1163284111, 0.1161825421, 0.1160342626, 0.1158745274,
			0.1157283312, 0.1155889619, 0.1154336113, 0.1152822874,
			0.1151366424, 0.114986248, 0.1148448111, 0.1146950206,
			0.1145581968, 0.1144133882, 0.1142644494, 0.1141243633,
			0.1139825575, 0.113847523, 0.1137078036, 0.1135720543,
			0.1134380927, 0.1133030876, 0.1131657078, 0.11302446, 0.1128893848,
			0.1127437516, 0.1126099954, 0.1124787034, 0.1123381073,
			0.1122146774, 0.1120726247, 0.1119411699, 0.1118047686,
			0.1116671585, 0.1115302955, 0.1114005083, 0.1112740909,
			0.1111458568, 0.1110086416, 0.1108741234, 0.1107399461,
			0.1106062145, 0.1104719161, 0.1103425398, 0.1102144028,
			0.1100784384, 0.1099465354, 0.1098156351, 0.1096788213,
			0.1095538596, 0.1094263837, 0.1093037733, 0.109169297,
			0.1090298517, 0.1088948542, 0.1087589908, 0.1086243328,
			0.1084921923, 0.1083501546, 0.1082126294, 0.10806837, 0.1079313097,
			0.1077923664, 0.1076470334, 0.1075198124, 0.1073760565,
			0.1072358779, 0.1071081075, 0.106968717, 0.1068322812, 0.106699198,
			0.1065600193, 0.1064320123, 0.1063007106, 0.1061724707,
			0.1060398842, 0.1059007888, 0.1057634858, 0.1056238268,
			0.105486874, 0.1053496612, 0.1052189889, 0.1050848335,
			0.1049567282, 0.1048194752, 0.1046939496, 0.1045611432,
			0.1044333061, 0.1043001866, 0.1041711018, 0.1040313402,
			0.1038992339, 0.1037688036, 0.1036321133, 0.1035112425,
			0.1033794068, 0.1032532067, 0.1031167377, 0.1029858705,
			0.1028580728, 0.1027330648, 0.1025981852, 0.1024756894,
			0.1023436753, 0.1022143194, 0.1020872433, 0.101951697,
			0.1018251643, 0.1016994194, 0.1015693167, 0.1014471387,
			0.1013146396, 0.1011853636, 0.1010564744, 0.100927043,
			0.1007949947, 0.10066425, 0.1005427266, 0.1004205484, 0.1002852288,
			0.1001522822, 0.1000230225, 0.09989231068, 0.09976446988,
			0.099641476, 0.09951165345, 0.09937288787, 0.09923676402,
			0.0991080494, 0.09897610009, 0.09883589862, 0.09870393312,
			0.09857221592, 0.09844737886, 0.09831679846, 0.09818467463,
			0.09805280248, 0.09792634849, 0.09778797425, 0.0976546632,
			0.09752314948, 0.09739802983, 0.09727900229, 0.09714621416,
			0.09701047392, 0.09687768566, 0.09674586104, 0.09661333008,
			0.09648477556, 0.09635401668, 0.09620938928, 0.09607004079,
			0.09593478475, 0.09578870142, 0.09565698565, 0.09551609511,
			0.09538165632, 0.0952414921, 0.095104298, 0.09497956821,
			0.09485425101, 0.09471573588, 0.0945756111, 0.09444217525,
			0.09431515595, 0.09418682404, 0.09405505551, 0.0939226292,
			0.09378774523, 0.09365138981, 0.09351605844, 0.09337952697,
			0.093233803, 0.09309360141, 0.09296453741, 0.09282909726,
			0.09270013589, 0.09256560776, 0.09243849399, 0.09230843196,
			0.0921706629, 0.09204521078, 0.09191694139, 0.09178231138,
			0.09164414978, 0.09150539364, 0.09137119488, 0.09123452806,
			0.09109899407, 0.09095579383, 0.09082730068, 0.09069782608,
			0.09055696733, 0.09042083688, 0.09028516138, 0.09014401258,
			0.09001953405, 0.08988181756, 0.08974353632, 0.0896061701,
			0.08946668459, 0.08932603172, 0.08918440277, 0.08905484025,
			0.08892530932, 0.08879197149, 0.08865690038, 0.08852161124,
			0.08838586394, 0.08825695499, 0.08812377983, 0.08798573625,
			0.087849959, 0.0877191988, 0.08758733916, 0.08745141688,
			0.08732047946, 0.087187227, 0.08705606408, 0.08692687782,
			0.08679564751, 0.08665949925, 0.08652089981, 0.08638329828,
			0.08624458853, 0.08611580833, 0.08598288712, 0.08584939973,
			0.08572441678, 0.08559143161, 0.08545247417, 0.0853106936,
			0.08517841465, 0.08504134721, 0.08490717072, 0.08475781133,
			0.08462866208, 0.0844842894, 0.0843349068, 0.08420399407,
			0.08407300737, 0.08392681852, 0.0837813733, 0.08364554415,
			0.08350319563, 0.08336382588, 0.08323043069, 0.08309064381,
			0.08294443054, 0.08280637853, 0.08266654414, 0.08252107091,
			0.08237916939, 0.08223997925, 0.08209758089, 0.08195706734,
			0.0818128187, 0.08167549303, 0.08153002949, 0.08138576741,
			0.08124404009, 0.08109884636, 0.08094937754, 0.08080859641,
			0.08065883697, 0.08051374121, 0.08036808568, 0.08022610072,
			0.0800803759, 0.07992460482, 0.07977307904, 0.07961707735,
			0.0794700428, 0.07931701692, 0.07916227996, 0.07901187886,
			0.07885278383, 0.07869634569, 0.07855012621, 0.07840211596,
			0.07824806621, 0.07809744517, 0.07795379438, 0.07780725836,
			0.07765366001, 0.07749549578, 0.07734135516, 0.07717811729,
			0.07702156257, 0.07686178968, 0.07670410294, 0.07654452578,
			0.07638453464, 0.07622610941, 0.07606786753, 0.07589559566,
			0.07573398307, 0.07556389164, 0.07539800058, 0.07523378369,
			0.07506767082, 0.07489622914, 0.07472067512, 0.07455655241,
			0.07438372236, 0.07420745044, 0.07405327402, 0.073879368,
			0.07371381627, 0.07353899255, 0.0733665649, 0.07318777327,
			0.07300958756, 0.07282576488, 0.07263668932, 0.07245138158,
			0.07226768514, 0.07207603798, 0.07188636777, 0.07169987068,
			0.07150549935, 0.07131415596, 0.07111432903, 0.0709046981,
			0.07070791325, 0.07051119764, 0.07030457826, 0.07008589393,
			0.06986649561, 0.06964410094, 0.06941580344, 0.06918985335,
			0.06896255847, 0.06874005302, 0.0685127184, 0.06826783161,
			0.06801332137, 0.06777196484, 0.06751495086, 0.06725282965,
			0.06698077079, 0.06672421015, 0.06643484913, 0.06616077638,
			0.0658803449, 0.06558526164, 0.06529212144, 0.06497943212,
			0.06467396734, 0.06435029162, 0.06401831405, 0.06367257613,
			0.06329121672, 0.06296771803, 0.06262122428, 0.06226002497,
			0.06189670934, 0.06149748705, 0.0610866123, 0.06070096191,
			0.06026644212, 0.05982632747, 0.05935187492, 0.05891129773,
			0.05848172228, 0.05804586544, 0.05759339225, 0.0570947606,
			0.05659944317, 0.05614009985, 0.05562090016, 0.05508102611,
			0.0545350607, 0.05401503445, 0.05336388897, 0.05280940354,
			0.05223771652, 0.05161137572, 0.05098112233, 0.05035497787,
			0.04973865124, 0.04909911572, 0.04843967087, 0.04781282317,
			0.04717934811, 0.04656174839, 0.04585315598, 0.04518693213,
			0.04454249496, 0.04388948891, 0.04317503726, 0.04245904272,
			0.04171160048, 0.04097907566, 0.04021199872, 0.03947868264,
			0.0387538753, 0.03798104055, 0.03729724708, 0.03656228118,
			0.03583485554, 0.03511124776, 0.0343765777, 0.03365465913,
			0.03289163843, 0.03212214534, 0.03134150929, 0.03064210847,
			0.02986869507, 0.02909392845, 0.02822747357, 0.02751898122,
			0.02677742723, 0.02600849274, 0.02523523779, 0.02440260643,
			0.0236555813, 0.02287138265, 0.02210086464, 0.02137752409,
			0.02053085446, 0.01984076513, 0.01916934137, 0.01854667698,
			0.01785429054, 0.01724492301, 0.01658818583, 0.01599507343,
			0.01540071109, 0.01478412923, 0.01423383598, 0.01368029026,
			0.01316537005, 0.01262894326, 0.01205110787, 0.01154997692,
			0.01110058677, 0.0106069608, 0.01017997706, 0.009808617047,
			0.009354711411, 0.008884094741, 0.008462400871, 0.008047957762,
			0.007616577933, 0.007255316769, 0.00692291681, 0.00651832447,
			0.006198685355, 0.00589006657, 0.00556311824, 0.005255071468,
			0.004966865322, 0.004697303785, 0.004424424784, 0.004214539083,
			0.004031865793, 0.003820404858, 0.003610369802, 0.003391823574,
			0.003207155375, 0.003052894682, 0.002880964295, 0.002715512488,
			0.002536307435, 0.002389456193, 0.002230672126, 0.002066526154,
			0.001963479315, 0.001849800877, 0.001724969562, 0.00160773391,
			0.001493126886, 0.00137473554, 0.001297962228, 0.001216964853,
			0.001120150585, 0.001034178876, 9.57E-04, 8.85E-04, 8.32E-04,
			7.72E-04, 7.12E-04, 6.76E-04, 6.30E-04, 5.79E-04, 5.38E-04,
			5.00E-04, 4.67E-04, 4.27E-04, 3.93E-04, 3.52E-04, 3.23E-04,
			2.97E-04, 2.58E-04, 2.33E-04, 2.09E-04, 1.87E-04, 1.59E-04,
			1.47E-04, 1.34E-04, 1.22E-04, 1.09E-04, 9.84E-05, 8.56E-05,
			7.66E-05, 7.17E-05, 7.05E-05, 6.53E-05, 6.32E-05, 5.45E-05,
			4.96E-05, 4.54E-05, 4.43E-05, 4.31E-05, 3.28E-05, 2.91E-05,
			2.72E-05, 2.29E-05, 1.89E-05, 1.85E-05, 1.08E-05, 1.07E-05,
			1.06E-05, 1.01E-05, 9.84E-06, 9.76E-06, 9.18E-06, 5.46E-06,
			5.46E-06, 5.33E-06, 5.33E-06, 5.27E-06, 5.27E-06, 5.00E-06,
			5.00E-06, 5.00E-06, 4.72E-06, 4.72E-06, 4.72E-06, 4.56E-06,
			4.45E-06, 4.23E-06, 3.95E-06, 3.95E-06, 3.77E-06, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	// shuffled z340's CS std deviations
	public static double[] z340ShuffleStdDev = new double[] { 0.05959215369,
			0.03879831809, 0.03300181165, 0.02909365308, 0.02611052616,
			0.02373149487, 0.02168768545, 0.02017007254, 0.01903994695,
			0.01817814283, 0.01762410571, 0.01711823028, 0.01679612848,
			0.01659407611, 0.01628378368, 0.01595408985, 0.01559173759,
			0.01520061379, 0.01481260288, 0.01423791038, 0.01368790165,
			0.0131882867, 0.01279747969, 0.01240386857, 0.01203053457,
			0.01173068966, 0.01149682763, 0.01129987433, 0.01115338093,
			0.01107439865, 0.01095199145, 0.01083660786, 0.01072353137,
			0.01061737805, 0.01054142888, 0.0104591873, 0.01040464917,
			0.01033110534, 0.01030929274, 0.01032472156, 0.01031529527,
			0.01027243399, 0.01020017605, 0.01016258042, 0.01005618953,
			0.009959436985, 0.009832078099, 0.009714468571, 0.009554241249,
			0.009420713231, 0.009235655297, 0.009062536008, 0.008925108305,
			0.008803220602, 0.008719580168, 0.008642976174, 0.008624500831,
			0.008595260416, 0.008609904107, 0.00859821109, 0.008548836767,
			0.008547345499, 0.008514808499, 0.008476789735, 0.00843124933,
			0.008335636972, 0.008174222462, 0.008055352706, 0.007873696765,
			0.007676988965, 0.00746959715, 0.007252871445, 0.007028649793,
			0.006813503891, 0.006613484936, 0.006467910673, 0.006368943098,
			0.006276889025, 0.006241651435, 0.006236492052, 0.006278488673,
			0.00633999269, 0.006451184524, 0.006563190222, 0.006727807577,
			0.006861637423, 0.007000312953, 0.007133008545, 0.007249303068,
			0.007345621851, 0.007448326992, 0.007499224999, 0.007535661075,
			0.007579158452, 0.007571387773, 0.007578868861, 0.007586789725,
			0.007567745939, 0.007535171193, 0.007485584765, 0.00743794963,
			0.007409136628, 0.007376850436, 0.007306565806, 0.007247476624,
			0.007150948109, 0.007082753277, 0.007023891915, 0.00697577427,
			0.00689202134, 0.00682196936, 0.006748804243, 0.00668708459,
			0.006607714632, 0.006545883044, 0.006453772126, 0.006358918981,
			0.00624369769, 0.006160153931, 0.006060821707, 0.005959338569,
			0.005847255346, 0.005773319659, 0.005658045843, 0.005543678547,
			0.005447144615, 0.005349878104, 0.005250676013, 0.005179194903,
			0.005092820438, 0.005020746149, 0.004955521927, 0.004897245294,
			0.004839457884, 0.004802554989, 0.004789269749, 0.004798891602,
			0.004828489778, 0.004874969994, 0.004931777455, 0.004998697044,
			0.005104730792, 0.005216545526, 0.005351519999, 0.005503006033,
			0.005624825775, 0.005747916571, 0.005879423814, 0.005995539948,
			0.006114839237, 0.006237412606, 0.00633411245, 0.006427254376,
			0.006492564729, 0.006550072193, 0.006587965966, 0.006617030206,
			0.006641291775, 0.006631553078, 0.006620485776, 0.00658915368,
			0.006554677564, 0.00649911041, 0.006432779938, 0.00637259174,
			0.006308387193, 0.00623402144, 0.006189102499, 0.006149511448,
			0.006085971617, 0.006027067017, 0.005984828318, 0.005949192582,
			0.005904028365, 0.005884018189, 0.005851517424, 0.005836731313,
			0.005800713016, 0.005772978647, 0.005752761478, 0.005745273675,
			0.005714205511, 0.005692931055, 0.00567935074, 0.00565622111,
			0.00562475805, 0.005593059429, 0.00555529611, 0.005527239908,
			0.005470939737, 0.005413938804, 0.005361554663, 0.00532156035,
			0.00528242628, 0.005230805647, 0.005191969271, 0.005149032825,
			0.005128118927, 0.005080100414, 0.005070854566, 0.005049700308,
			0.005039509003, 0.005044286241, 0.005053731749, 0.005070232285,
			0.005100941388, 0.005136370049, 0.005177290577, 0.005240289012,
			0.005291087096, 0.005356295011, 0.00542236287, 0.005502506532,
			0.005565924796, 0.005642662744, 0.005708768082, 0.005795099731,
			0.005861258612, 0.005920227254, 0.005958469051, 0.006004201871,
			0.006055745688, 0.006084302469, 0.006098932215, 0.006131101342,
			0.006133737721, 0.006142787695, 0.006124731985, 0.00610526646,
			0.006068002445, 0.006032343288, 0.005979714828, 0.005924059443,
			0.005847737224, 0.005761236615, 0.005694392951, 0.005606360782,
			0.005508732021, 0.005395608436, 0.005280777066, 0.005156448419,
			0.005042850791, 0.004905352251, 0.004780333135, 0.004640186532,
			0.004493798997, 0.00437148136, 0.00423689463, 0.004118562422,
			0.004007753716, 0.003905134373, 0.003805931952, 0.003711227819,
			0.003633851851, 0.00357681727, 0.003533884224, 0.003506086751,
			0.00350446841, 0.003485377149, 0.003489395597, 0.003538489091,
			0.003577932464, 0.003628487761, 0.003698142186, 0.003791172599,
			0.00387917698, 0.003970700533, 0.004083764885, 0.004197600126,
			0.004306763769, 0.004431961225, 0.004564606544, 0.004689046169,
			0.004823755189, 0.004946237944, 0.005065850777, 0.005170776191,
			0.005286444462, 0.005379196319, 0.005472166343, 0.005565937321,
			0.005650260636, 0.005735244815, 0.005803536794, 0.005876834058,
			0.005951767089, 0.006013053875, 0.0060658952, 0.00611479611,
			0.006156718732, 0.006188171192, 0.006209505022, 0.006217663268,
			0.006221515839, 0.006229206737, 0.006226041569, 0.006213743618,
			0.006196427631, 0.006180068268, 0.006160599497, 0.006122707682,
			0.006092434136, 0.006062514289, 0.006028017297, 0.00599216644,
			0.00594876055, 0.005911443549, 0.005863425632, 0.005816185158,
			0.005762821375, 0.005704183323, 0.005669659107, 0.005618217781,
			0.005566866904, 0.005515945342, 0.005461835451, 0.00541507089,
			0.005374502693, 0.005329017455, 0.005285274715, 0.005248532209,
			0.005196152708, 0.005155501076, 0.005112878004, 0.005075549492,
			0.00503162182, 0.004991925107, 0.004954384108, 0.004907352674,
			0.004857255069, 0.004821673807, 0.004782368714, 0.00475399479,
			0.004725594832, 0.00469046548, 0.004660688901, 0.0046389507,
			0.0046219501, 0.004588835396, 0.004572598705, 0.004539242892,
			0.004513629129, 0.00448536585, 0.004467220091, 0.00446225726,
			0.004450295062, 0.004432316748, 0.004423434679, 0.004412905561,
			0.00440873145, 0.004413212512, 0.004410370463, 0.004417087364,
			0.004417945664, 0.004427720498, 0.004437566047, 0.004445285959,
			0.004457261987, 0.004465025075, 0.004479313222, 0.004485987738,
			0.004504849697, 0.004531097201, 0.004552805892, 0.004566981839,
			0.004590860786, 0.004617372435, 0.004652210792, 0.004689040154,
			0.004721915809, 0.004750152746, 0.004775400929, 0.004795709813,
			0.004817605569, 0.0048322938, 0.004851588403, 0.004863182824,
			0.00489446097, 0.004913584084, 0.004920679946, 0.00492964168,
			0.004945846673, 0.004962456308, 0.004976883655, 0.004995675662,
			0.005006769118, 0.005016034308, 0.005024798652, 0.005029366334,
			0.005045112911, 0.005049234889, 0.005061573892, 0.005071665402,
			0.00508009906, 0.0050859111, 0.005092750959, 0.005085807684,
			0.005083843119, 0.005084404158, 0.005085421953, 0.005086229948,
			0.005087684058, 0.005071007636, 0.005074955023, 0.005071005066,
			0.005066620443, 0.005062660478, 0.005066680564, 0.005072395333,
			0.005068740304, 0.005070030202, 0.00509183969, 0.005103647196,
			0.005113593734, 0.005122534093, 0.005123986777, 0.005133846153,
			0.005123332888, 0.005120044789, 0.005118156761, 0.005130344563,
			0.005134677548, 0.005134323515, 0.005132401805, 0.005124034839,
			0.005110164486, 0.005116244778, 0.005107336925, 0.005095572235,
			0.005098545504, 0.005088859935, 0.005088094826, 0.005073237376,
			0.005064972661, 0.005074243721, 0.005062992499, 0.005060762589,
			0.005063905899, 0.005057057991, 0.005056590466, 0.005048163272,
			0.005044594351, 0.005049778615, 0.005047417108, 0.005051318353,
			0.00505228608, 0.005062582911, 0.005070096517, 0.005083295382,
			0.005096947682, 0.005105653478, 0.005116969381, 0.005149277337,
			0.005169012792, 0.005181875557, 0.005203953656, 0.005216556047,
			0.00523099826, 0.005252922779, 0.005276465956, 0.005297067052,
			0.005320489899, 0.005326211223, 0.005345624132, 0.005360637227,
			0.005388609823, 0.005408510641, 0.005421518794, 0.005442243219,
			0.005453703029, 0.005468537315, 0.005469916944, 0.005468563865,
			0.005459680233, 0.00546190185, 0.00545822929, 0.005457093363,
			0.005447673509, 0.005434806578, 0.005416072979, 0.005400808181,
			0.005371980283, 0.005359540271, 0.005327212716, 0.005295133261,
			0.005259291044, 0.005218911335, 0.005167411977, 0.005131377031,
			0.00508557615, 0.005045280332, 0.004996413389, 0.004942703929,
			0.004893762724, 0.004841614042, 0.004788773012, 0.004734007673,
			0.00467797639, 0.004625153246, 0.004573852447, 0.004516053968,
			0.004462861388, 0.004408781188, 0.00436381764, 0.00431674961,
			0.004272725533, 0.004236358099, 0.004206115851, 0.004173006335,
			0.004145782368, 0.004127273369, 0.004108034129, 0.004093177644,
			0.004077366056, 0.004075512206, 0.004084030314, 0.004083107726,
			0.004081639451, 0.00410538795, 0.004126497322, 0.004149274821,
			0.004178876483, 0.004204482974, 0.004228895624, 0.004267770461,
			0.004310005902, 0.004360636798, 0.004412032343, 0.004461301318,
			0.004519158028, 0.004561457067, 0.004612607638, 0.004674309855,
			0.004728659282, 0.00478642046, 0.004838699672, 0.004895782102,
			0.004954009593, 0.005006073271, 0.005055410076, 0.005099434934,
			0.005147624493, 0.005199338918, 0.005244069409, 0.005296928103,
			0.005338967868, 0.005384137606, 0.00542978998, 0.00546615966,
			0.005508427387, 0.005539457794, 0.005564681434, 0.005589346551,
			0.005615252065, 0.00563515577, 0.005643092878, 0.005649277549,
			0.005653355757, 0.005653173844, 0.005657507701, 0.005656204698,
			0.005653962335, 0.0056583594, 0.005656602948, 0.005641401268,
			0.005630200718, 0.00562116312, 0.005610757129, 0.0055929037,
			0.005569257485, 0.005551610572, 0.005533165215, 0.005504947089,
			0.005482809104, 0.005450066724, 0.005420703505, 0.005393558335,
			0.005362913961, 0.005323281074, 0.005293895684, 0.005248516588,
			0.005201637865, 0.005166412307, 0.005132990695, 0.005105526093,
			0.005072917801, 0.005032136491, 0.004999878849, 0.004962973359,
			0.00492345297, 0.004882786241, 0.004854558208, 0.004818501037,
			0.004780761118, 0.004752553585, 0.004727511427, 0.004695258492,
			0.004677211633, 0.004656568565, 0.004637354341, 0.004617000324,
			0.004586326081, 0.00457398591, 0.0045706122, 0.004572506854,
			0.004563471995, 0.004553151189, 0.004551319345, 0.00453963008,
			0.004533809248, 0.00454147019, 0.004547588436, 0.004549139109,
			0.004555038022, 0.004560766724, 0.004569246908, 0.004584913149,
			0.004599920914, 0.004609110321, 0.004614696694, 0.004624883497,
			0.004637174778, 0.004651422888, 0.004662540269, 0.004683992921,
			0.004704765843, 0.004707445949, 0.004726327197, 0.004744438133,
			0.00476416534, 0.004774295841, 0.004795485084, 0.004822810028,
			0.004839323528, 0.004845977898, 0.004860652657, 0.004873974335,
			0.004886695916, 0.004902167883, 0.004915756326, 0.004932800478,
			0.004943077168, 0.004956610558, 0.004972016498, 0.004986826406,
			0.005003708202, 0.00502311814, 0.005039990595, 0.00505403888,
			0.005068544909, 0.005077376673, 0.005077872443, 0.005085298303,
			0.005093362109, 0.005093401618, 0.00509448698, 0.005097486379,
			0.005093432622, 0.005082834866, 0.005081602326, 0.005074650978,
			0.005068372636, 0.005057845562, 0.005054438138, 0.00505096467,
			0.005048773817, 0.005043753009, 0.005040536168, 0.005029865177,
			0.005014222661, 0.005005668213, 0.005000002525, 0.004988581137,
			0.004974171023, 0.004964559192, 0.004947097492, 0.004938437736,
			0.004930564269, 0.004916178801, 0.004901682778, 0.004889290711,
			0.004872540121, 0.004854572235, 0.004835216286, 0.004827558134,
			0.004808007997, 0.004798859891, 0.004769729902, 0.004761674823,
			0.004740253888, 0.004719885003, 0.004710508099, 0.004692580493,
			0.004678646996, 0.004659879784, 0.004641525208, 0.004620235555,
			0.004604417537, 0.004584612027, 0.004562884605, 0.004557573895,
			0.004547023061, 0.004535648631, 0.004523069517, 0.004509192838,
			0.004494379684, 0.004486092558, 0.004482245563, 0.004471945305,
			0.004473170424, 0.004462105974, 0.004454770581, 0.004451580081,
			0.004451045324, 0.004459431453, 0.004454952943, 0.004461650301,
			0.004454049441, 0.004458373643, 0.004464750824, 0.004464626556,
			0.004465285698, 0.004463867395, 0.004470283273, 0.004468857266,
			0.004487407119, 0.004497331738, 0.004497978572, 0.004505033633,
			0.004509141695, 0.004519901738, 0.004525248203, 0.004531757921,
			0.004540755705, 0.004554026648, 0.00456591247, 0.004562985649,
			0.004572839264, 0.004584432197, 0.004589178705, 0.004604013798,
			0.004610684929, 0.004616381067, 0.004613969625, 0.004617791724,
			0.004625594728, 0.004631864687, 0.004644354025, 0.00464710701,
			0.004642364858, 0.004649407065, 0.00465624124, 0.004659395488,
			0.004665191408, 0.004676563487, 0.004678952574, 0.004687796306,
			0.004691468428, 0.004696364679, 0.00469554975, 0.004692870464,
			0.004688185228, 0.004682006465, 0.004673682358, 0.00467622775,
			0.004677158648, 0.00467772945, 0.004670794451, 0.004670768003,
			0.004664516444, 0.004659817088, 0.004661889341, 0.00465833646,
			0.00464992894, 0.004645816159, 0.004651756681, 0.004647544072,
			0.004655037325, 0.004635913809, 0.004631253675, 0.004616784003,
			0.004612794694, 0.004612308673, 0.004606496086, 0.004599883558,
			0.004597384001, 0.004592966324, 0.004588186991, 0.004582638152,
			0.004579626976, 0.004579432624, 0.004581467804, 0.00458014487,
			0.004572024792, 0.004577625023, 0.004579264527, 0.004583519187,
			0.004592855608, 0.004600762334, 0.004601161855, 0.00460818575,
			0.004614048648, 0.00462437558, 0.004630165863, 0.004642091498,
			0.004644471882, 0.00464763727, 0.004648256039, 0.004659430345,
			0.004669742635, 0.004686868813, 0.004698891624, 0.00470255915,
			0.004705963393, 0.004710061863, 0.004724770667, 0.004727686533,
			0.004735504638, 0.004737782985, 0.004753099217, 0.004760906628,
			0.004770173817, 0.004777191269, 0.00478089114, 0.004786828824,
			0.004793209006, 0.004798528896, 0.004800782961, 0.004808627343,
			0.004813868579, 0.004819542438, 0.004811436881, 0.004812424487,
			0.004826978476, 0.004828111439, 0.0048318667, 0.004841463962,
			0.004848415628, 0.004865386749, 0.004860902877, 0.004862909398,
			0.004868989088, 0.00487193129, 0.004878040761, 0.004872707445,
			0.004875345396, 0.004878094895, 0.004875636972, 0.004876383262,
			0.004884367935, 0.00488433771, 0.004889316678, 0.004887984047,
			0.004889648023, 0.004879418149, 0.004875547906, 0.004877687593,
			0.004883042417, 0.004884739547, 0.004880104517, 0.004882741771,
			0.004879838204, 0.004875225257, 0.004868240749, 0.004867410004,
			0.004865000581, 0.004868767076, 0.004868254401, 0.004869974371,
			0.004866000875, 0.004859164425, 0.00485467516, 0.004851298576,
			0.004857667554, 0.004862727555, 0.004863885242, 0.004859729572,
			0.004857748219, 0.00486216579, 0.004864735281, 0.004875208765,
			0.004876416547, 0.004881634094, 0.004882750233, 0.004887064064,
			0.004883556634, 0.004881265588, 0.004880530898, 0.004878635069,
			0.004888718154, 0.004895907527, 0.004907323116, 0.004914235978,
			0.004921426114, 0.004924979848, 0.004931252898, 0.004930847068,
			0.004935937022, 0.004945152375, 0.004948859637, 0.004952843779,
			0.004967072382, 0.004974719866, 0.004983053138, 0.004981607594,
			0.004994469097, 0.004995643424, 0.005001494489, 0.005005812488,
			0.005012822685, 0.005021687202, 0.005034592663, 0.005043039638,
			0.005042472864, 0.005050563486, 0.005056875967, 0.005060132266,
			0.005070640225, 0.005082997805, 0.005096975007, 0.005109612411,
			0.005116841881, 0.005125762509, 0.005135243641, 0.005151103173,
			0.005170506892, 0.005178003001, 0.005180128805, 0.005193910267,
			0.005206385616, 0.005215738631, 0.005222319551, 0.005235709024,
			0.005254301651, 0.00526992176, 0.005283186627, 0.005298846459,
			0.005313871207, 0.005319013256, 0.005333429205, 0.005340492032,
			0.005348804705, 0.005358646302, 0.0053688117, 0.005375240708,
			0.005387698674, 0.005400312794, 0.005415417601, 0.005429941592,
			0.005456605103, 0.005460321226, 0.005467749402, 0.005477500054,
			0.005493628357, 0.005495753937, 0.005512742374, 0.005525392851,
			0.005546188858, 0.005565590977, 0.005580241825, 0.005605387559,
			0.0056161068, 0.005625675415, 0.005641294552, 0.005662634513,
			0.005691805038, 0.005714800735, 0.005733686824, 0.005740349042,
			0.005756911519, 0.005784959936, 0.005804887381, 0.005819986273,
			0.005850314851, 0.005866991751, 0.005896610134, 0.005919704003,
			0.005940154005, 0.005956503742, 0.00598060966, 0.006007362685,
			0.006035526136, 0.006056421759, 0.006089740721, 0.006121662929,
			0.006151280741, 0.006179983096, 0.00622103154, 0.006314852755,
			0.006344573186, 0.006381677869, 0.006414251291, 0.006477397283,
			0.006522448976, 0.006588117468, 0.006655699516, 0.006725333522,
			0.006760180147, 0.006834076137, 0.006922144565, 0.006990536885,
			0.007058878378, 0.007102730401, 0.007172793269, 0.007294224577,
			0.007419222281, 0.007536856559, 0.007627549246, 0.00775675635,
			0.007901108446, 0.008067342349, 0.008207973139, 0.008400149795,
			0.008587232836, 0.008776879627, 0.008937142486, 0.009103916866,
			0.009225237534, 0.009424943374, 0.009656327114, 0.00984620549,
			0.01011586323, 0.01034996898, 0.01060406107, 0.01078524742,
			0.01108923661, 0.01131377858, 0.01152886208, 0.01184117608,
			0.01214861898, 0.01243544618, 0.012691575, 0.01298002703,
			0.01331672176, 0.01368621, 0.01410153347, 0.01433967716,
			0.0146317958, 0.01496317155, 0.01528379938, 0.01567887489,
			0.01608226436, 0.01638499844, 0.01679679902, 0.01721255912,
			0.01769442785, 0.01806429639, 0.0184148174, 0.01875037632,
			0.01909477285, 0.01951294955, 0.01988275989, 0.02014349282,
			0.02051097921, 0.02089515719, 0.02129734743, 0.0215945184,
			0.02208668104, 0.02242964282, 0.02278130928, 0.02318440364,
			0.02358549254, 0.02394237581, 0.02426126718, 0.0246155682,
			0.02496283631, 0.02524663196, 0.02552749752, 0.02575362521,
			0.02605985031, 0.02631570847, 0.0265190956, 0.02673508637,
			0.0269715787, 0.02718718678, 0.02740732107, 0.02759800544,
			0.02780716707, 0.0279741417, 0.02812313132, 0.02829208476,
			0.02838340171, 0.0284688936, 0.02854545117, 0.02862610153,
			0.02867564927, 0.02871228609, 0.02873266448, 0.02873931649,
			0.02873021373, 0.02869882491, 0.02865942393, 0.02860799778,
			0.02858757947, 0.02849910322, 0.02839651165, 0.02827195498,
			0.02813843702, 0.02800942947, 0.02783768654, 0.02766711688,
			0.02747138421, 0.0272510863, 0.02704502207, 0.02680973433,
			0.0265498764, 0.0262880076, 0.0260217808, 0.02574804693,
			0.02545703007, 0.02515389653, 0.02484448912, 0.02451657347,
			0.02419039763, 0.02385766614, 0.02350819707, 0.0231432989,
			0.02275257498, 0.02238458684, 0.02203805426, 0.02164785505,
			0.02127549352, 0.02092062261, 0.02051137318, 0.02008522468,
			0.01968395849, 0.0192745523, 0.01882691498, 0.01842705711,
			0.01803135885, 0.01757791081, 0.01717964332, 0.01678858207,
			0.01637455881, 0.01596348499, 0.01556529508, 0.015176562,
			0.01477462907, 0.01445238124, 0.01413815745, 0.01377164911,
			0.01339974271, 0.01300391054, 0.01264563726, 0.01233542623,
			0.0119951173, 0.01165953962, 0.01129415023, 0.01096446266,
			0.01059994716, 0.01023916537, 0.009965423227, 0.009669958174,
			0.009331114145, 0.009006280965, 0.008684745212, 0.008348261295,
			0.008103158724, 0.007843473298, 0.007535304415, 0.007247942927,
			0.006983651759, 0.006717748092, 0.006518948124, 0.006259614264,
			0.006026609091, 0.005855648514, 0.005649282836, 0.005414268619,
			0.00520047926, 0.005005499472, 0.004808793355, 0.00461277246,
			0.004423800186, 0.004185594748, 0.004002877752, 0.003829393854,
			0.00357603834, 0.003390037611, 0.00321574573, 0.003029674871,
			0.002807936257, 0.002716252382, 0.002594177466, 0.002475952922,
			0.002350404801, 0.002227635668, 0.00209862689, 0.001993349282,
			0.001927768999, 0.001897504209, 0.001824138713, 0.0017712975,
			0.001659446627, 0.001582129095, 0.001522859517, 0.001488659503,
			0.001452324934, 0.001256328904, 0.001200498611, 0.001134051937,
			0.001047913492, 9.63E-04, 9.44E-04, 7.66E-04, 7.54E-04, 7.50E-04,
			7.15E-04, 7.00E-04, 6.95E-04, 6.61E-04, 5.46E-04, 5.46E-04,
			5.33E-04, 5.33E-04, 5.27E-04, 5.27E-04, 5.00E-04, 5.00E-04,
			5.00E-04, 4.72E-04, 4.72E-04, 4.72E-04, 4.56E-04, 4.45E-04,
			4.23E-04, 3.95E-04, 3.95E-04, 3.77E-04, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };	
	
	
	
	private void updateContactVector(String ciphertext) {
		contactvector = new ContactVector();
		for (int i=0; i<ciphertext.length(); i++) {
			Character x = null, xp = null, xf = null;
			x = ciphertext.charAt(i);
			if (i>0) xp = ciphertext.charAt(i-1);
			if (i<ciphertext.length()-1) xf = ciphertext.charAt(i+1);

			contactvector.incBefore(x, xp);
			contactvector.incAfter(x, xf);
		}
	}
	
	public void dumpContactVector() {
		for (Character ch : contactvector.mapBefore.keySet()) {
			for (Character ch2 : contactvector.mapBefore.get(ch).keySet()) {
				System.out.println("before " + ch + " " + ch2 + ": " + contactvector.mapBefore.get(ch).get(ch2));
			}
		}
		for (Character ch : contactvector.mapAfter.keySet()) {
			for (Character ch2 : contactvector.mapAfter.get(ch).keySet()) {
				System.out.println("after " + ch + " " + ch2 + ": " + contactvector.mapAfter.get(ch).get(ch2));
			}
		}
	}
	
	/**
	 * @param ciphertext
	 * @param sort
	 * @return
	 */
	public List<CosineSimilarityResult> compute(String ciphertext, boolean sort) {
		Map<Character, Integer> counts = Ciphers.countMap(ciphertext);
		//System.out.println(ciphertext);
		best = new HashMap<Character, Float>();
		updateContactVector(ciphertext);
		List<CosineSimilarityResult> results = new ArrayList<CosineSimilarityResult>();
		List<Character> a = Ciphers.alphabetAsList(ciphertext);
		//System.out.println(ciphertext);
		//for (Character ch : a) System.out.println(ch);
		for (int i=0; i<a.size(); i++) {
			char ch1 = a.get(i); 
			for (int j=i+1; j<a.size(); j++) {
				char ch2 = a.get(j);
				CosineSimilarityResult r = new CosineSimilarityResult();
				r.key = ""+ch1+ch2;
				r.val = cosineSimilarity(ch1, ch2);
				int product = counts.get(ch1) * counts.get(ch2);
				r.probability = ((float)product)/(ciphertext.length()*ciphertext.length());
				r.counts = counts.get(ch1) + counts.get(ch2);
				results.add(r);
				
				// track the best-seen similarity values per symbol
				Float b = best.get(ch1);
				if (b == null) b = 0f;
				b = Math.max(b, r.val);
				best.put(ch1, b);
				
				b = best.get(ch2);
				if (b == null) b = 0f;
				b = Math.max(b, r.val);
				best.put(ch2, b);
				
				
			}
		}
		if (sort) Collections.sort(results);
		
		score = 0; 
		for (Character ch : best.keySet()) {
			score += best.get(ch);
			//System.out.println("Best for " + ch + " is " + best.get(ch) +", score now " + score);
			min = Math.min(min, best.get(ch));
			max = Math.max(max, best.get(ch));
		}
		mean = score / best.size();
		
		return results;
	}
	
	public float cosineSimilarity(char ch1, char ch2) {
		//System.out.println("buh ch1 " + ch1 + " ch2 " + ch2);
		//try {
			Set<Character> a = new HashSet<Character>();
			if (contactvector.mapBefore.get(ch1) != null) for (Character ch : contactvector.mapBefore.get(ch1).keySet()) a.add(ch);
			if (contactvector.mapAfter.get(ch1) != null) for (Character ch : contactvector.mapAfter.get(ch1).keySet()) a.add(ch);
			//System.out.println("feh " + contactvector.mapBefore.get(ch2));
			if (contactvector.mapBefore.get(ch2) != null) for (Character ch : contactvector.mapBefore.get(ch2).keySet()) a.add(ch);
			if (contactvector.mapAfter.get(ch2) != null) for (Character ch : contactvector.mapAfter.get(ch2).keySet()) a.add(ch);
			List<Integer> x = new ArrayList<Integer>();
			List<Integer> y = new ArrayList<Integer>();
			for (Character ch : a) {
				x.add(contactvector.before(ch1, ch));
				y.add(contactvector.before(ch2, ch));
			}
			
			for (Character ch : a) {
				x.add(contactvector.after(ch1, ch));
				y.add(contactvector.after(ch2, ch));
			}
			
			float val = cosineDistance(x, y);
			//System.out.println("ch1 " + ch1 + " ch2 " + ch2 + " val " + val);
			return val;
		//} catch (Exception e) {
		//	System.out.println("[" + ch1 + "][" + ch2 + "] " + e);
		//}
		//return 0;
	}
	
	public float cosineDistance(List<Integer> x, List<Integer> y) {
		float dot = 0; // dot product
		float magX = 0; // magnitude of vector x
		float magY = 0; // magnitude of vector y
		for (int i=0; i<x.size(); i++) {
			int xi = x.get(i);
			int yi = y.get(i);
			dot += xi*yi;
			magX += xi*xi;
			magY += yi*yi;
			//System.out.println(" - i" + i + " xi " + xi + " yi " + yi + " dot " + dot + " magX " + magX + " magY " + magY);
		}
		magX = (float) Math.sqrt(magX);
		magY = (float) Math.sqrt(magY);
		return dot/(magX*magY);
	}
	/**
	 * returns array of stats on the top 25 cosine similarities in the given list
	 * @param list the sorted list of cosine similarities
	 * @return array of [max cosine similarity, sum of top 25, mean of top 25
	 */
	public float[] top25(List<CosineSimilarityResult> list) {
		float[] results = new float[3]; // max, sum, mean
		
		for (int i=0; i<25 && i<list.size(); i++) {
			results[1] += list.get(i).val;
			//System.out.println(list.get(i).val);
		}
		
		results[0] = list.get(0).val;
		results[2] = results[1] / 25;
		return results;
		
	}

	public static float[] measure(String ciphertext) {
		CosineSimilarity c = new CosineSimilarity();
		List<CosineSimilarityResult> results = c.compute(ciphertext, false);
		//int count=0;
		//float[] f = c.top25(results);
		//return f[1];
		return new float[] {c.score, c.min, c.max, c.mean};
	}
	
	public static void shuffle() {
		CosineSimilarity c = new CosineSimilarity();

		String cipher;
		String line;
		
		while (true) {
			cipher = Ciphers.cipher[0].cipher;
			cipher = CipherTransformations.shuffle(cipher);
			List<CosineSimilarityResult> results = c.compute(cipher, true);
			line = "z340	";
			for (CosineSimilarityResult r : results) {
				line += r.val + "	";
			}
			System.out.println(line);
			
			
			cipher = Ciphers.cipher[1].cipher;
			cipher = CipherTransformations.shuffle(cipher);
			results = c.compute(cipher, true);
			line = "z408	";
			for (CosineSimilarityResult r : results) {
				line += r.val + "	";
			}
			System.out.println(line);
		}
	}
	
	public static double[] measureSigmas(String cipher, boolean weighted) {
		int reduction = 4;
		CosineSimilarity c = new CosineSimilarity();
		List<CosineSimilarityResult> results = c.compute(cipher, true);
		
		double[] result = new double[] {0,0};
		int i = 0;
		for (CosineSimilarityResult cs : results) {
			double stddev = z340ShuffleStdDev[i];
			double mean = z340ShuffleMeans[i];
			if (stddev > 0) {
				double sigma = (cs.val-mean)/stddev;
				if (sigma > 1) {
					result[0] += weighted ? sigma/Math.pow(2,i/reduction) : sigma;
				}
				else if (sigma < -1) {
					sigma = 0-sigma;
					result[1] += weighted ? sigma/Math.pow(2,i/reduction) : sigma;
				}
				
				//System.out.println(mean + " " + stddev + " " + cs.val + " " + sigma + " " + result[0] + " " + result[1]);
			}
			i++;
		}
		return result;
	}
	public static double measureWeightedSum(String cipher) {
		int reduction = 4;
		CosineSimilarity c = new CosineSimilarity();
		List<CosineSimilarityResult> results = c.compute(cipher, true);
		
		double result = 0;
		int i = 0;
		for (CosineSimilarityResult cs : results) {
			result += cs.val/Math.pow(2,i/reduction);
			i++;
		}
		return result;
	}
	
	public static void test() {
		CosineSimilarity c = new CosineSimilarity();
		//List<CosineSimilarityResult> results = c.compute(org.oranchak.lucene.Ciphers.ciphers[3][0].toString(), false);
		String cipher = Ciphers.cipher[1].cipher;
		//String cipher = "dEB+*5k.L(MVE5FV5B<MF<Sf9pl/C|DPYL2c+ztZ2H+M8|CV@K<R/9^%OF7TB29^4OFTUt*5cZG|TC7zG)pcl-+MVW)+k_Rq#2pb&RddG+4dl5||.UqLcW<6N:(+H*;>^D(+4(8KSTfN:^j*Xz6-z/JNbjROp+8zF*K<SBKl%WVM)R)WkLKJy7t-cYAO&Dp+fZ+B.;+G1BCOy-RR+4>f|p+dp1*HBO|pOGp+2|5J+JYM(+pzOUNyBO+l#2E.B)+lXz6PYA>#Z3P>L#2bkN|<z2p+l2_cFKUcy^D4ct+B31c_8R(UVF5C^W(cFHk.#KSMF;+Fz9G++|TB4-y.LWBO";
		//String cipher = "ABCDEFGHIJKLMNOPQRSTUFVEWXVYZabcdefghXijklmnopqrsPtuJJJUEvWwxkBpJXXaplRcyzRM01Of0XSspL2KCQNDMZJDgo2bJKILTTJ3LGzJMy4qW5i6FRmfdh7XN8QMoAup8yrcMavPJfdJ0wVxWszSFJMtRL8MXGrZXnNpRefgPXJAJUb1JCBHJKdaqcki3liMuJJEGfYRUWakrqORwlEsJ3SDNS51ugwxkEzgF6XOV7JtRJWEIkEBli2JGm8UpXhYWPXkcWJRflH0ZRWvvlsQ4MXqAJkl0zCMJaGPYJzukD6MXWJ0Czk9X8Cxl7ZtFLzRcJEXG1Oa6PMU";
		//Map<Character, Integer> counts = Ciphers.countMap(cipher);
		List<CosineSimilarityResult> results = c.compute(cipher, true);
		int count=0;
		for (CosineSimilarityResult r : results) {
			//float score = r.val;
			//score *= counts.get(r.key.charAt(0));
			//score *= counts.get(r.key.charAt(1));
			count++;
			//System.out.println(score + ", " + r.key + "," + r.val);
			System.out.println(r.val*r.counts + ", " + r.val + ", " + r.key + ", " + r.counts);
			//if (count == 25) break;
		}
		float[] f = c.top25(results);
		for (int i=0; i<f.length; i++) System.out.println("f"+i+": " + f[i]);
		System.out.println("Best per symbol:");
		int symbols = 0;
		for (Character ch : c.best.keySet()) {
			System.out.println(" - " + ch + ": " + c.best.get(ch));
			symbols++;
		}
		System.out.println("Best score: " + c.score);
		System.out.println("Average per symbol: " + (c.score/symbols));
		//c.dumpContactVector();
		System.out.println(Arrays.toString(measureSigmas(cipher, false)));
		System.out.println(Arrays.toString(measureSigmas(cipher, true)));
	}
	
	public static void processShuffleLog() {
		LogProcessor.processForCosineSimilarityShuffle("/Users/doranchak/projects/zodiac/cosine-similarity-for-shuffles.txt");
	}
	
	public static void testMeasureSigmas() {
		System.out.println(Arrays
				.toString(measureSigmas(Ciphers.cipher[0].cipher, true)));
		
		
		double[][] testCiphers = new double[][] {
				{298.6480861, 1502.169182},
				{380.1521567, 1857.020936},
				{30.82344199, 3189.921072},
				{52.88121622, 3441.493557},
				{14.70426547, 1620.043382}
		};
		
		int i=0;
		while (true) {
			double[] result = measureSigmas(CipherTransformations
					.shuffle(Ciphers.cipher[0].cipher), true);
			for (double[] other : testCiphers) {
				if (result[0] >= other[0] && result[1] >= other[1])
					System.out.println(i + " " + Arrays.toString(result));
			}
			i++;
		}
	}
	
	/** run shuffle tests and compute full stats (min, max, mean, standard deviation */
	public static void shuffleTest() {
		//String cipher = "ABCDEFGHIJKLMNOPQRSTUFVEWXVYZabcdefghXijklmnopqrsPtuJJJUEvWwxkBpJXXaplRcyzRM01Of0XSspL2KCQNDMZJDgo2bJKILTTJ3LGzJMy4qW5i6FRmfdh7XN8QMoAup8yrcMavPJfdJ0wVxWszSFJMtRL8MXGrZXnNpRefgPXJAJUb1JCBHJKdaqcki3liMuJJEGfYRUWakrqORwlEsJ3SDNS51ugwxkEzgF6XOV7JtRJWEIkEBli2JGm8UpXhYWPXkcWJRflH0ZRWvvlsQ4MXqAJkl0zCMJaGPYJzukD6MXWJ0Czk9X8Cxl7ZtFLzRcJEXG1Oa6PMU";
		String cipher = Ciphers.cipher[1].cipher;
		
		Map<String, List<Float>> map = new HashMap<String, List<Float>>(); 
		for (int i=0; i<10000; i++) {
			if (i % 100 == 0) System.out.println(i+"...");
			CosineSimilarity c = new CosineSimilarity();
			cipher = CipherTransformations.shuffle(cipher);
			List<CosineSimilarityResult> results = c.compute(cipher, true);
			for (CosineSimilarityResult result : results) {
				List<Float> val = map.get(result.key);
				if (val == null) val = new ArrayList<Float>();
				map.put(result.key, val);
				val.add(result.val);
			}
		}
		
		for (String key : map.keySet()) {
			DescriptiveStatistics stat = new DescriptiveStatistics();
			for (Float val : map.get(key)) {
				stat.addValue(val);
			}
			System.out.println("key " + key + " " + stat.getMin() + " " + stat.getMax() + " " + stat.getMean() + " " + stat.getStandardDeviation());
		}
	}

	/* shuffle test: stats for each symbol combination */
	public static void shuffleTest2() {
		//String cipher = "ABCDEFGHIJKLMNOPQRSTUFVEWXVYZabcdefghXijklmnopqrsPtuJJJUEvWwxkBpJXXaplRcyzRM01Of0XSspL2KCQNDMZJDgo2bJKILTTJ3LGzJMy4qW5i6FRmfdh7XN8QMoAup8yrcMavPJfdJ0wVxWszSFJMtRL8MXGrZXnNpRefgPXJAJUb1JCBHJKdaqcki3liMuJJEGfYRUWakrqORwlEsJ3SDNS51ugwxkEzgF6XOV7JtRJWEIkEBli2JGm8UpXhYWPXkcWJRflH0ZRWvvlsQ4MXqAJkl0zCMJaGPYJzukD6MXWJ0Czk9X8Cxl7ZtFLzRcJEXG1Oa6PMU";
		String cipher = Ciphers.cipher[1].cipher;
		
		Map<String, Float> referenceValues = new HashMap<String, Float>(); 
		CosineSimilarity c = new CosineSimilarity();
		List<CosineSimilarityResult> results = c.compute(cipher, true);
		for (CosineSimilarityResult result : results) referenceValues.put(result.key, result.val); 
		
		
		Map<String, List<Float>> map = new HashMap<String, List<Float>>();
		Map<String, DescriptiveStatistics> stats = new HashMap<String, DescriptiveStatistics>(); 
		for (int i=0; i<10000; i++) {
			if (i % 100 == 0) System.out.println(i+"...");
			c = new CosineSimilarity();
			cipher = CipherTransformations.shuffle(cipher);
			results = c.compute(cipher, true);
			for (CosineSimilarityResult result : results) {
				List<Float> val = map.get(result.key);
				if (val == null) val = new ArrayList<Float>();
				map.put(result.key, val);
				val.add(result.val);
				
				DescriptiveStatistics stat = stats.get(result.key);
				if (stat == null) stat = new DescriptiveStatistics();
				stat.addValue(result.val);
				stats.put(result.key, stat);
			}
		}
		
		for (String key : stats.keySet()) {
			DescriptiveStatistics stat = stats.get(key);
			float refVal = referenceValues.get(key);
			double sigma = Math.abs(refVal-stat.getMean())/stat.getStandardDeviation();
			System.out.println(key + "	" + stat.getMin()
					+ "	" + stat.getMax() + "	" + stat.getMean() + "	"
					+ stat.getPercentile(50) + "	"
					+ stat.getStandardDeviation() + "	" + refVal + "	"
					+ sigma);
		}
	}
	
	/** stats for max cosine similiarities of random shuffles */
	public static void shuffleTest3() {
		String cipher = Ciphers.cipher[0].cipher;

		CosineSimilarity c = new CosineSimilarity();
		List<CosineSimilarityResult> results = c.compute(cipher, true);
		System.out.println(results.get(0).toString());
		float refVal = results.get(0).val;

		DescriptiveStatistics stats = new DescriptiveStatistics();
		for (int i = 0; i < 10000; i++) {
			if (i % 1000 == 0)
				System.out.println(i + "...");
			c = new CosineSimilarity();
			cipher = CipherTransformations.shuffle(cipher);
			results = c.compute(cipher, true);
			stats.addValue(results.get(0).val);
		}

		double sigma = (refVal - stats.getMean())
				/ stats.getStandardDeviation();
		System.out.println(stats.getMin() + "	" + stats.getMax() + "	"
				+ stats.getMean() + "	" + stats.getPercentile(50) + "	"
				+ stats.getStandardDeviation() + "	" + refVal + "	" + sigma);
	}
	
	public static void main(String[] args) {
		//shuffle();
		//processShuffleLog();
		//test();
		//shuffleTest();
		//shuffleTest2();
		shuffleTest3();
		//System.out.println(measureWeightedSum(Ciphers.cipher[0].cipher));
		//System.out.println(measureWeightedSum(Ciphers.cipher[1].cipher));
		//System.out.println(measureWeightedSum("041D,%(!9=:AN).-8\"1J@Q,T3KA8G?MO'2E/X3FU\\-GL_R!-%:#3W.&HBO8\"4G]<CX[+.E6IV8Z;H2=-K6()NU@+MFRS?\\Z+8EQ1E,_LJ9%TQN!EYHS$<^O3EX/IWE]-#C-E.>40P1$Y6B:-@VJD08^1MOEWQ=18IETGK5U1]3)FGS!3'@1,DHG:R0\\AQQX-_L%SD-=VKS0-UC(.PY?8[JLD4Q0N_VT9E!,AMB-E=8KZ<EOQ+X[6W&]G2$:8C1.)>(38PH5E'YG-\\\"N^I@B>\",/6MS'-E-WX<]F)3QCQPS1YI^[*4R3G?_%.$/&3@-ELKAD-UE\\JV0HEDNS(TE%7"));
		//testMeasureSigmas();
	}
}
